Description: >
    Udagram - deploy high-availibity architecture using cloudformation
Parameters:
    environmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
    vpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this
        Type: String
        Default: 10.0.0.0/16
    publicSubnet1CIDR:
        Description: IP range for public subnet 1.
        Type: String
        Default: 10.0.0.0/24
    publicSubnet2CIDR:
        Description: IP range for public subnet 2.
        Type: String
        Default: 10.0.1.0/24
    privateSubnet1CIDR:
        Description: IP range for private subnet 1.
        Type: String
        Default: 10.0.2.0/24
    privateSubnet2CIDR:
        Description: IP range for private subnet 2.
        Type: String
        Default: 10.0.3.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref environmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref environmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref VPC
          AvailabilityZone: !Select [0, !GetAZs '']
          CidrBlock: !Ref publicSubnet1CIDR
          MapPublicIpOnLaunch: true
          Tags: 
              - Key: Name
                Value: !Sub ${environmentName} Public Subnet (AZ1)
  PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref VPC
          AvailabilityZone: !Select [0, !GetAZs '']
          CidrBlock: !Ref privateSubnet1CIDR
          MapPublicIpOnLaunch: false
          Tags: 
              -   Key: Name
                  Value: !Sub ${environmentName} Private Subnet (AZ1)
  PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref VPC
          AvailabilityZone: !Select [ 1, !GetAZs '' ]
          CidrBlock: !Ref publicSubnet2CIDR
          MapPublicIpOnLaunch: true
          Tags: 
              -   Key: Name
                  Value: !Sub ${environmentName} Public Subnet (AZ2)
  PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref VPC
          AvailabilityZone: !Select [ 1, !GetAZs '' ]
          CidrBlock: !Ref privateSubnet2CIDR
          MapPublicIpOnLaunch: false
          Tags: 
              -   Key: Name
                  Value: !Sub ${environmentName} Private Subnet (AZ2)
  NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc
  NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc
  NatGateway1: 
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt NatGateway1EIP.AllocationId
          SubnetId: !Ref PublicSubnet1
  NatGateway2: 
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NatGateway2EIP.AllocationId
          SubnetId: !Ref PublicSubnet2
  PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${environmentName} Public Routes 
  DefaultPublicRoute: 
      Type: AWS::EC2::Route
      DependsOn: InternetGatewayAttachment
      Properties: 
          RouteTableId: !Ref PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet2
  PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC
          Tags: 
              - Key: Name 
                Value: !Sub ${environmentName} Private Routes (AZ1)
  DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway1
  PrivateSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          SubnetId: !Ref PrivateSubnet1
  PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC
          Tags: 
              - Key: Name 
                Value: !Sub ${environmentName} Private Routes (AZ2)
  DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway2
  PrivateSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          SubnetId: !Ref PrivateSubnet2
Outputs:
    VPC:
        Description: A reference to the created VPC.
        Value: !Ref VPC
        Export:
            Name: !Sub ${environmentName}-VPCID
    VPCPublicRouteTable:
        Description: Public routing.
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${environmentName}-PUB-RT
    VPCPrivateRouteTable1:
        Description: Private routing AZ1.
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${environmentName}-PR1-RT
    VPCPrivateRouteTable2:
        Description: Private routing AZ2.
        Value: !Ref PrivateRouteTable2
        Export:
            Name: !Sub ${environmentName}-PR2-RT
    PublicSubnets:
        Description: A list of the public subnets.
        Value: !Join [ ",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
        Export: 
            Name: !Sub ${environmentName}-PUB-NETS
    PrivateSubnets:
        Description: A list of the private subnets.
        Value: !Join [ ",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export: 
            Name: !Sub ${environmentName}-PRIV-NETS
    PublicSubnet1:
        Description: A reference to the public subnet from AZ1.
        Value: !Ref PublicSubnet1
        Export: 
            Name: !Sub ${environmentName}-PUB1-SN
    PublicSubnet2:
        Description: A reference to the public subnet from AZ2.
        Value: !Ref PublicSubnet2
        Export: 
            Name: !Sub ${environmentName}-PUB2-SN
    PrivateSubnet1:
        Description: A reference to the private subnet from AZ1.
        Value: !Ref PrivateSubnet1
        Export: 
            Name: !Sub ${environmentName}-PRIV1-SN
    PrivateSubnet2:
        Description: A reference to the private subnet from AZ2.
        Value: !Ref PrivateSubnet2
        Export: 
            Name: !Sub ${environmentName}-PRIV2-SN
